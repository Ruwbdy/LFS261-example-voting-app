pipeline {
    agent {
        docker {
            image 'python:3.11-slim'
            args '--user root'
        }
    }

    stages {
        stage("build") {
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Compiling vote app..'
                dir('vote') {
                    sh "pip install -r requirements.txt"
                }
            }
        }

        stage("test") {
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Running Unit Tests on vote app.'
                dir('vote') {
                    sh "pip install -r requirements.txt"
                    sh "pip install pytest"
                    sh 'pytest -v'
                }
            }
        }

        stage('docker-package') {
            when {
                changeset "**/vote/**"
                branch 'master'
            }
            agent any
            steps {
                echo 'Packaging vote app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("ruwbdy/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("${env.BRANCH_NAME}")
                        voteImage.push("latest")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Building multibranch pipeline for worker is completed..'
        }
    }
}
